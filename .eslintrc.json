// NOTE: flatConfigに変更するためにjsonファイルに変更
{
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended-type-checked",
    "standard-with-typescript",
    "plugin:jsx-a11y/recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:storybook/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "tsconfigRootDir": ".",
    "project": ["./tsconfig.json"]
  },
  "plugins": [
    "@typescript-eslint",
    "jsx-a11y",
    "react",
    "react-hooks",
    "import",
    "ban"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": true,
      "node": true
    }
  },
  "rules": {
    // ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    // NOTE: 一旦互換性を保ちながらupdateするためにルールを設定
    // https://zenn.dev/cybozu_frontend/articles/ts-eslint-v6-guide

    // v6 で recommended から削除されたものを有効化
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",
    // v6 で strict に移動したルールを有効化
    "@typescript-eslint/no-non-null-assertion": "warn",
    // v6 で stylistic に移動したルールを有効化
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    // v6 で recommended に追加されたルールを無効化
    "@typescript-eslint/no-duplicate-enum-values": "off",
    "@typescript-eslint/no-unsafe-declaration-merging": "off",
    // v6 で recommended-type-checked に追加されたルールを無効化
    "@typescript-eslint/no-base-to-string": "off",
    "@typescript-eslint/no-duplicate-type-constituents": "off",
    "@typescript-eslint/no-redundant-type-constituents": "off",
    "@typescript-eslint/no-unsafe-enum-comparison": "off",
    // ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

    "@typescript-eslint/no-unnecessary-condition": "error",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/consistent-type-exports": [
      "error",
      {
        "fixMixedExportsWithInlineTypeSpecifier": false
      }
    ],

    // NOTE: typeのimport方法を統一する
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "fixStyle": "separate-type-imports"
      }
    ],
    "import/consistent-type-specifier-style": ["error", "prefer-top-level"],

    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": ["error"],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/strict-boolean-expressions": ["error"],
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "types": "always"
      }
    ],
    // NOTE: strict-boolean-checkの方を優先しているためoffにする
    "@typescript-eslint/prefer-optional-chain": "off",
    "import/extensions": [
      "error",
      {
        "ignorePackages": true,
        "pattern": {
          "js": "never",
          "jsx": "never",
          "ts": "never",
          "tsx": "never",
          "type": "always"
        }
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "object",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "{react,react-dom/**}",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "{[A-Z]*,**/[A-Z]*}",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@/**",
            "group": "parent",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "react/display-name": "off",
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["../*", "src/*"],
            "message": "Use absolute paths with aliases."
          }
        ]
      }
    ]
  },
  // react用の記述
  "overrides": [
    {
      "files": ["*.tsx", "*.ts"],
      "plugins": ["unused-imports"],
      "rules": {
        "arrow-body-style": "error",
        "react/prop-types": "off",
        "react-hooks/exhaustive-deps": "error",
        "react/destructuring-assignment": [
          "error",
          "always",
          {
            "destructureInSignature": "always"
          }
        ],
        "react/self-closing-comp": [
          "error",
          {
            "component": true,
            "html": true
          }
        ],
        "react/jsx-curly-brace-presence": "error",
        "react/jsx-boolean-value": "error",
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/jsx-pascal-case": [
          "error",
          {
            "allowAllCaps": true,
            "allowNamespace": true
          }
        ],
        "react/no-array-index-key": "error",
        "react/jsx-no-useless-fragment": "error",

        // https://github.com/sweepline/eslint-plugin-unused-imports?tab=readme-ov-file#usage
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "vars": "all",
            "varsIgnorePattern": "^_",
            "args": "after-used",
            "argsIgnorePattern": "^_"
          }
        ],
        "react/jsx-handler-names": [
          "error",
          {
            "checkLocalVariables": true,
            "checkInlineFunction": true
          }
        ],
        "react/jsx-sort-props": [
          "error",
          {
            "callbacksLast": true,
            "shorthandLast": true,
            "reservedFirst": true
          }
        ]
      }
    },
    // ban用の記述
    {
      "files": ["*.tsx", "*.ts"],
      "excludedFiles": [
        "src/hooks/useNiceModalShow/useNiceModalShow.ts",
        "src/hooks/useConfirm/useConfirm.ts"
      ],
      "rules": {
        "ban/ban": [
          "error",
          {
            "name": ["NiceModal", "show"],
            "message": "Use @/src/hooks/useNiceModalShow instead."
          }
        ]
      }
    },
    {
      "files": ["*.stories.tsx"],
      "rules": {
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-call": "off"
      }
    }
  ]
}
